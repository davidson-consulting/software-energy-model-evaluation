#+TITLE:   Macro sequential vs parallel
#+DESCRIPTION:
#+KEYWORDS:
#+LANGUAGE:  fr
#+OPTIONS:   H:2 num:t toc:t \n:nil @:t ::t |:t ^:nil -:t f:t *:t <:t _:nil
#+OPTIONS:   TeX:t LaTeX:t skip:nil d:nil todo:t pri:nil tags:not-in-toc
#+INFOJS_OPT: view:nil toc:nil ltoc:t mouse:underline buttons:0 path:https://orgmode.org/org-info.js
#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: noexport
#+HTML_LINK_UP:
#+HTML_LINK_HOME:
#+HTML_HEAD_EXTRA:<style> #content { max-width: 10000px; }  ul, ol, li, a {margin: 0;} </style>


* Description

** Goal

Experimentation launching phoronix applications inside VMs launched with virtualbox and vagrant, and acquiring energy consumption using powerapi.

** Folders

- scripts:  Folder containing launching scripts, and trace analysing scripts.
- out: some traces obtained on small-intel nodes
- scenario: set of predefined scenarios

** Usage

*** Single scenario

**** Launching

   An experimentation is described by a scenario configuration file, and is executed on a remote machine.

   #+BEGIN_EXAMPLE
   $ cd scripts/
   $ python main.py scenario/s.yaml 192.168.1.12
   #+END_EXAMPLE

   The python script perform a ssh connection to the remote machine, that has to be correctly configured to accept root ssh connection without password (cf. ssh-keygen).

   A scenario is described as follows :
   #+BEGIN_EXAMPLE
   vms: # List of VMs to launch on the remote machine
     - name: small # name of the VM (used in the result to identify the VM)
       vcpus: 6
       memory: 4096
       instances: 1 # Number of instances of the VM to launch
       image: ubuntu-22.04
       disk: 10000
       test: # The test to launch on the instances of this VM template
         type: phoronix
         name: compress-7zip
         start: 0 # second to wait before launching the compress-7zip experiment
         nb-run: 5 # number of iteration of the test to run
   vm-sensor-config:
      slices: # cgroups watched by the sensor running inside the VMs
         - "anon.slice/*"
         - "custom.slice/*"
      perf-counters: ["LLC_MISSES", "INSTRUCTION_RETIRED", "PERF_COUNTER_HW_CPU_CYCLES", "PERF_COUNTER_SW_CPU_CLOCK"]
   #+END_EXAMPLE

   The above scenario will create a VM 'small' of size 6 vcpus, 4GB of RAM and 10GB of disk with the os ubuntu-22.04, and run the test compress-7zip immediately on it.

*** Playbook

**** Launching

A playbook of multiple scenario can be executed at once :

   #+BEGIN_EXAMPLE
   $ cd scripts/
   $ python playbook.py ../scenario/playbook.yaml ../out 192.168.1.12
   #+END_EXAMPLE

A playbook is a list of scenario paths, all paths are relative to the location of the playbook file.
For example, the scenario "build2/1/build2_1_v_build2_1_same_time.yaml" in the playbook "../scenario/versus.yaml" will be located in "../scenario/build2/1/build2_1_v_build2_1_same_time.yaml"

**** Results

The third parameter of the playbook.py script is the folder in which results will be downloaded.
multiple identical scenario will be placed in subfolder (/1, /2, /3).

*** Analysing the results

Results of a run are a list of traces files generated by PowerAPI.

The script 'compare.py' can analyse a result folder when the root path is given to it as first parameter:
#+BEGIN_EXAMPLE
$ python scripts/compare.py out/small-intel/cloverleaf/3/cloverleaf_3_v_build2_1_same_time/1/ build0 cloverleaf0
$

27023.53037029641   build0
21998.096058789804   cloverleaf0
#+END_EXAMPLE

For each VM, we have the estimated energy consumption.
The file ".build/build0-v-cloverleaf0_powerapi.png" contains the plots of the execution.

** PowerAPI configuration

PowerAPI configuration files are defined in the "../libs/powerapi" folder.
